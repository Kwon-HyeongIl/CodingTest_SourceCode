import Foundation

func solution(_ a:Int, _ b:Int, _ c:Int, _ d:Int) -> Int {
    
    if a == b && b == c && c == d && d == a { // 1
        return 1111 * a
        
    } else if a != b && b != c && c != d && d != a && a != c && b != d { // 5
        return [a, b, c, d].min()!
        
    } else { 
        if (a == b && c == d && b != c) || (a == c && b == d && a != b) || (a == d && b == c && a != b) { // 3

            if (a == b && c == d && b != c) {
                return (a + c) * abs(a - c)
            } else {
                return (a + b) * abs(a - b)
            } 
        }
        
        if (a == b && b == c && c != d) || (a == b && b == d && c != d) || (a == c && c == d && a != b) || (b == c && c == d && a != b) { // 2
            
            if (a == b && b == c && c != d) { // 1 1 1 2
                return (10 * c + d) * (10 * c + d)
            } else if (a == b && b == d && c != d) { // 1 1 2 1
                return (10 * d + c) * (10 * d + c)
            } else if (a == c && c == d && a != b) { // 1 2 1 1
                return (10 * a + b) * (10 * a + b)
            } else { // 2 1 1 1
                return (10 * b + a) * (10 * b + a)
            }
        }
        
        if (a == b && c != d) || (a == c && b != d) || (a == d && b != c) || (b == c && a != d) || (b == d && a != c) || (c == d && a != b) { // 4

            if (a == b && c != d) {
                return c * d
            } else if (a == c && b != d) {
                return b * d
            } else if (a == d && b != c) {
                return b * c
            } else if (b == c && a != d) {
                return a * d
            } else if (b == d && a != c) {
                return a * c
            } else {
                return a * b
            }
        }
        
        return 0
    }
}
