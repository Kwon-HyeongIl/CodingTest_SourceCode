import java.util.*;

class Solution {
    public long solution(String expression) {
        
        // 주어진 문자열 분리해서 리스트에 담기
        List<String> expList = new ArrayList<>();
        StringTokenizer st = new StringTokenizer(expression, "+-*", true);
        
        while (st.hasMoreTokens()) {
            expList.add(st.nextToken());
        }
        
        List<String> tempList = new ArrayList<>(expList);
        
        // 연산자 우선 순위 정렬
        String[][] operator = new String[][] {
            "+-*".split(""),
            "+*-".split(""),
            "-+*".split(""),
            "-*+".split(""),
            "*+-".split(""),
            "*-+".split("")
        };
        
        // 반복 연산
        long[] results = new long[6];
        
        for(int i=0; i<6; i++) {
            for (int k=0; k<3; k++) {
                for (int j=0; j<expList.size(); j++) {
                    if (expList.get(j).equals(operator[i][k])) {
                        
                        long temp;
                        
                        switch (operator[i][k]) {
                            case "+": 
                                temp = Long.valueOf(expList.get(j-1)) + Long.valueOf(expList.get(j+1));
                                expList.remove(j-1);
                                expList.remove(j-1);
                                expList.remove(j-1);
                                
                                expList.add(j-1, String.valueOf(temp));
                                j--;
                                break;
                                
                            case "-":
                                temp = Long.valueOf(expList.get(j-1)) - Long.valueOf(expList.get(j+1));
                                expList.remove(j-1);
                                expList.remove(j-1);
                                expList.remove(j-1);
                                
                                expList.add(j-1, String.valueOf(temp));
                                j--;
                                break;
                                
                            case "*":    
                                temp = Long.valueOf(expList.get(j-1)) * Long.valueOf(expList.get(j+1));
                                expList.remove(j-1);
                                expList.remove(j-1);
                                expList.remove(j-1);
                                
                                expList.add(j-1, String.valueOf(temp));
                                j--;
                                break;
                            
                        }
                    }
                }
            }

            results[i] = Math.abs(Long.valueOf(expList.get(0)));
            
            expList = new ArrayList<>(tempList);
        }
        
        long result = 0L;
        for (long i : results) {
            if (result < i) {
                result = i;
            }
        }
        
        return result;
    }
}
